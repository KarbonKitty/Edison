@page "/"
@using System.Timers

<div class="container">
    <Toast />

    <div class="title">
        <h1>Edison</h1>
    </div>

    <div class="currencySidebar">
        <h2>Money: @DisplayHelpers.DisplayPrice(Engine.State.Cash)</h2>
        <h2>Production: @Engine.State.TotalPowerProduction kWh / s</h2>
        <h2>Demand: @((Engine.State.GridSize * Engine.State.PowerUsage).ToString("N2")) kWh / s</h2>
        <h3 class=@(Engine.State.GridSize < Engine.State.TotalPowerProduction ? "warning" : "")>Grid size: @Engine.State.GridSize people</h3>
        <h3>Power usage per person: @Engine.State.PowerUsage.ToString("N2") kWh / s</h3>
        <button class="btn" @onclick="SaveGame">Save game</button>
        <button class="btn" @onclick="LoadGame">Load game</button>
    </div>

    <div class="buildingList">
        @foreach (var generator in Engine.State.Generators)
        {
            <PowerGeneratorComponent Generator=@generator />
        }
    </div>

    <div class="gridList">
        @foreach (var extender in Engine.State.Extenders)
        {
            <GridExtenderComponent Extender=@extender />
        }
    </div>
</div>

@code {
    [Inject] protected GameEngine Engine { get; set; }
    [Inject] private IToastService ToastService { get; set; }
    protected Timer gameTimer;
    protected Timer autoSaveTimer;

    protected override void OnInitialized()
    {
        gameTimer = new Timer
        {
            Interval = 50
        };
        gameTimer.Elapsed += LoopStep;
        gameTimer.Start();

        autoSaveTimer = new Timer {
            Interval = 30_000
        };
        autoSaveTimer.Elapsed += AutoSave;
        autoSaveTimer.Start();

        // this doesn't do anything if there is no saved game data
        LoadGame();
    }

    private void LoopStep(object sender, ElapsedEventArgs e)
    {
        Engine.ProcessTime(e.SignalTime);
        this.StateHasChanged();
    }

    private async void AutoSave(object sender, ElapsedEventArgs e)
    {
        await this.SaveGame();
        ToastService.ShowToast("Game saved!");
    }

    private async Task SaveGame()
    {
        await Engine.SaveGame();
        ToastService.ShowToast("Game manually saved");
    }

    private async Task LoadGame()
    {
        var serializedState = await Engine.GetSavedGameString();
        if (serializedState is not null)
        {
            Engine.LoadGame(serializedState);
            ToastService.ShowToast("Game loaded");
        }
    }
}
